Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values) return _elm.Main.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $Keyboard = Elm.Keyboard.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Time = Elm.Time.make(_elm),
   $Window = Elm.Window.make(_elm);
   var _op = {};
   var input = function () {
      var delta = A2($Signal.map,function (t) {    return t / 20;},$Time.fps(30));
      return A2($Signal.sampleOn,delta,A3($Signal.map2,F2(function (v0,v1) {    return {ctor: "_Tuple2",_0: v0,_1: v1};}),delta,$Keyboard.arrows));
   }();
   var view = F2(function (_p0,mario) {
      var _p1 = _p0;
      var _p5 = _p1._0;
      var _p4 = _p1._1;
      var src = "http://orig15.deviantart.net/a436/f/2012/101/1/c/mario_sprite_by_flamingdragon5000-d4vt57a.png";
      var marioImage = A3($Graphics$Element.image,35,35,src);
      var dir = function () {    var _p2 = mario.dir;if (_p2.ctor === "Left") {    return "left";} else {    return "right";}}();
      var verb = _U.cmp(mario.y,0) > 0 ? "jump" : !_U.eq(mario.vx,0) ? "walk" : "stand";
      var _p3 = {ctor: "_Tuple2",_0: $Basics.toFloat(_p5),_1: $Basics.toFloat(_p4)};
      var w = _p3._0;
      var h = _p3._1;
      var groundY = 62 - h / 2;
      var position = {ctor: "_Tuple2",_0: mario.x,_1: mario.y + groundY};
      return A3($Graphics$Collage.collage,
      _p5,
      _p4,
      _U.list([A2($Graphics$Collage.filled,A3($Color.rgb,174,238,238),A2($Graphics$Collage.rect,w,h))
              ,A2($Graphics$Collage.move,
              {ctor: "_Tuple2",_0: 0,_1: 24 - h / 2},
              A2($Graphics$Collage.filled,A3($Color.rgb,74,167,43),A2($Graphics$Collage.rect,w,50)))
              ,A2($Graphics$Collage.move,position,$Graphics$Collage.toForm(marioImage))]));
   });
   var physics = F2(function (dt,mario) {    return _U.update(mario,{x: mario.x + dt * mario.vx,y: A2($Basics.max,0,mario.y + dt * mario.vy)});});
   var gravity = F2(function (dt,mario) {    return _U.update(mario,{vy: _U.cmp(mario.y,0) > 0 ? mario.vy - dt / 4 : 0});});
   var jump = F2(function (keys,mario) {    return _U.cmp(keys.y,0) > 0 && _U.eq(mario.vy,0) ? _U.update(mario,{vy: 12.0}) : mario;});
   var Keys = F2(function (a,b) {    return {x: a,y: b};});
   var Right = {ctor: "Right"};
   var mario = {x: 0,y: 0,vx: 0,vy: 0,dir: Right};
   var Left = {ctor: "Left"};
   var walk = F2(function (keys,mario) {
      return _U.update(mario,{vx: $Basics.toFloat(keys.x),dir: _U.cmp(keys.x,0) < 0 ? Left : _U.cmp(keys.x,0) > 0 ? Right : mario.dir});
   });
   var update = F2(function (_p6,mario) {
      var _p7 = _p6;
      var _p9 = _p7._1;
      var _p8 = _p7._0;
      return A2(physics,_p8,A2(walk,_p9,A2(jump,_p9,A2(gravity,_p8,mario))));
   });
   var main = A3($Signal.map2,view,$Window.dimensions,A3($Signal.foldp,update,mario,input));
   var Model = F5(function (a,b,c,d,e) {    return {x: a,y: b,vx: c,vy: d,dir: e};});
   return _elm.Main.values = {_op: _op
                             ,Model: Model
                             ,Left: Left
                             ,Right: Right
                             ,Keys: Keys
                             ,mario: mario
                             ,update: update
                             ,jump: jump
                             ,gravity: gravity
                             ,physics: physics
                             ,walk: walk
                             ,view: view
                             ,main: main
                             ,input: input};
};